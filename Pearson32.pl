#! /usr/bin/perl -w

# Author: Clayton Bauman
# License: BSD

package Rand::Pearson32;

# This rand() is based on the Pearson hash. It is the hash of a hash of a hash.
# The hash is a 32-bit adaptation of Pearson's 8-bit hash.

#Test code:
for(1..shift){
    printf("%08x\n", pearson_rand32());
}

sub seed_pearson_rand32{
    $Rand::Pearson32::seed[0] = ($_[0] & 0x000000ff)      ;
    $Rand::Pearson32::seed[1] = ($_[0] & 0x0000ff00) >> 8 ;
    $Rand::Pearson32::seed[2] = ($_[0] & 0x00ff0000) >> 16;
    $Rand::Pearson32::seed[3] = ($_[0] & 0xff000000) >> 24;
}

#accepts a list of weights and returns an index into the list
#with probability list[index] / sum(list)
sub pearson_rand32_choose{
    my $sum;
    my $rand;
    $sum += $_ for @_;
    $rand = pearson_rand32() % $sum;
    $index = 0;
    for(@_){
        $rand -= $_;
        return $index if $rand <= 0;
        $index++;
    }
    return $#_;
}

sub pearson_rand32{

#From Pearson's paper:
#
#h[O] := 0 ;
#for i in l..n loop
#  h[i] := T[ h[i-I] xor C[i] ] ;
#end loop ;
#return h[n] ;
#sub hash{

#    my @key;
#    $key[0] = ($_[0] & 0x000000ff);
#    $key[1] = ($_[0] & 0x0000ff00) >> 8;
#    $key[2] = ($_[0] & 0x00ff0000) >> 16;
#    $key[3] = ($_[0] & 0xff000000) >> 24;
    my @hash = (0,0,0,0);

    for(@Rand::Pearson32::seed){
        my $keyval = shift(@Rand::Pearson32::seed);
        #9,5,0,14,11,8,1,10,12,6,4,15,7,13,2,3
        $temp=$Rand::Pearson32::seed[0];
        $Rand::Pearson32::seed[0] = $Rand::Pearson32::byte_permutations->[1][ ($Rand::Pearson32::seed[1] ^ $keyval) ];
        $Rand::Pearson32::seed[1] = $Rand::Pearson32::byte_permutations->[2][ ($Rand::Pearson32::seed[2] ^ $keyval) ];
        $Rand::Pearson32::seed[2] = $Rand::Pearson32::byte_permutations->[3][ ($Rand::Pearson32::seed[3] ^ $keyval) ];
        $Rand::Pearson32::seed[3] = $Rand::Pearson32::byte_permutations->[0][ ($temp                     ^ $keyval) ];
    }

    return 
        (       ($Rand::Pearson32::seed[3] << 24) 
             |  ($Rand::Pearson32::seed[2] << 16) 
             |  ($Rand::Pearson32::seed[1] << 8 ) 
             |   $Rand::Pearson32::seed[0]
        )
    ;

}

BEGIN {

    my $time = time(); #This is the most common way to seed non-crypto PRNGs...

    $seed[0] = ($time & 0x000000ff)      ;
    $seed[1] = ($time & 0x0000ff00) >> 8 ;
    $seed[2] = ($time & 0x00ff0000) >> 16;
    $seed[3] = ($time & 0xff000000) >> 24;
    
    $byte_permutations = 
    [
        [ 
        0x01, 0x57, 0x31, 0x0c, 0xb0, 0xb2, 0x66, 0xa6, 0x79, 0xc1, 0x06, 0x54, 0xf9, 0xe6, 0x2c, 0xa3, 
        0x0e, 0xc5, 0xd5, 0xb5, 0xa1, 0x55, 0xda, 0x50, 0x40, 0xef, 0x18, 0xe2, 0xec, 0x8e, 0x26, 0xc8, 
        0x6e, 0xb1, 0x68, 0x67, 0x8d, 0xfd, 0xff, 0x32, 0x4d, 0x65, 0x51, 0x12, 0x2d, 0x60, 0x1f, 0xde, 
        0x19, 0x6b, 0xbe, 0x46, 0x56, 0xed, 0xf0, 0x22, 0x48, 0xf2, 0x14, 0xd6, 0xf4, 0xe3, 0x95, 0xeb, 
        0x61, 0xea, 0x39, 0x16, 0x3c, 0xfa, 0x52, 0xaf, 0xd0, 0x05, 0x7f, 0xc7, 0x6f, 0x3e, 0x87, 0xf8, 
        0xae, 0xa9, 0xd3, 0x3a, 0x42, 0x9a, 0x6a, 0xc3, 0xf5, 0xab, 0x11, 0xbb, 0xb6, 0xb3, 0x00, 0xf3, 
        0x84, 0x38, 0x94, 0x4b, 0x80, 0x85, 0x9e, 0x64, 0x82, 0x7e, 0x5b, 0x0d, 0x99, 0xf6, 0xd8, 0xdb, 
        0x77, 0x44, 0xdf, 0x4e, 0x53, 0x58, 0xc9, 0x63, 0x7a, 0x0b, 0x5c, 0x20, 0x88, 0x72, 0x34, 0x0a, 
        0x8a, 0x1e, 0x30, 0xb7, 0x9c, 0x23, 0x3d, 0x1a, 0x8f, 0x4a, 0xfb, 0x5e, 0x81, 0xa2, 0x3f, 0x98,
        0xaa, 0x07, 0x73, 0xa7, 0xf1, 0xce, 0x03, 0x96, 0x37, 0x3b, 0x97, 0xdc, 0x5a, 0x35, 0x17, 0x83, 
        0x7d, 0xad, 0x0f, 0xee, 0x4f, 0x5f, 0x59, 0x10, 0x69, 0x89, 0xe1, 0xe0, 0xd9, 0xa0, 0x25, 0x7b, 
        0x76, 0x49, 0x02, 0x9d, 0x2e, 0x74, 0x09, 0x91, 0x86, 0xe4, 0xcf, 0xd4, 0xca, 0xd7, 0x45, 0xe5, 
        0x1b, 0xbc, 0x43, 0x7c, 0xa8, 0xfc, 0x2a, 0x04, 0x1d, 0x6c, 0x15, 0xf7, 0x13, 0xcd, 0x27, 0xcb, 
        0xe9, 0x28, 0xba, 0x93, 0xc6, 0xc0, 0x9b, 0x21, 0xa4, 0xbf, 0x62, 0xcc, 0xa5, 0xb4, 0x75, 0x4c, 
        0x8c, 0x24, 0xd2, 0xac, 0x29, 0x36, 0x9f, 0x08, 0xb9, 0xe8, 0x71, 0xc4, 0xe7, 0x2f, 0x92, 0x78, 
        0x33, 0x41, 0x1c, 0x90, 0xfe, 0xdd, 0x5d, 0xbd, 0xc2, 0x8b, 0x70, 0x2b, 0x47, 0x6d, 0xb8, 0xd1,
        ],
        [
        0x5b, 0x32, 0x81, 0x52, 0x37, 0xfe, 0xec, 0xa9, 0x49, 0x29, 0xfd, 0x4a, 0xe4, 0x20, 0x19, 0xd4,
        0x6c, 0xe9, 0x70, 0x4d, 0x99, 0x13, 0x95, 0xb2, 0xb4, 0x72, 0xbb, 0x7b, 0x5e, 0x77, 0x11, 0x31, 
        0xa8, 0xef, 0x3d, 0xaf, 0xc6, 0x98, 0xc7, 0x92, 0x5c, 0x39, 0xa2, 0xc4, 0x7d, 0xf6, 0x8a, 0x0a, 
        0xd8, 0xb0, 0xca, 0xf7, 0x47, 0xa3, 0x56, 0xea, 0x75, 0x9d, 0x59, 0x93, 0x44, 0x8c, 0xf9, 0xad, 
        0x21, 0xfc, 0x7e, 0xe6, 0x40, 0xe1, 0x3b, 0xed, 0x60, 0x06, 0x25, 0x73, 0x2d, 0x3e, 0x09, 0x76,
        0xda, 0x5d, 0x48, 0xe0, 0xbf, 0x0d, 0x03, 0x1a, 0x9f, 0xb6, 0xdb, 0x7f, 0x91, 0x94, 0xc9, 0xde, 
        0xeb, 0xd3, 0x10, 0x84, 0x7c, 0x36, 0xb3, 0xcb, 0x22, 0xb1, 0x14, 0x61, 0x01, 0xe2, 0xac, 0x74,
        0xa1, 0xd5, 0xa4, 0xf0, 0x3c, 0x53, 0x1b, 0xba, 0x6f, 0x0e, 0xae, 0x78, 0x08, 0x88, 0xd0, 0xdf,
        0xc1, 0x12, 0x85, 0x05, 0x86, 0xf1, 0x97, 0x0c, 0x5f, 0x38, 0x18, 0xee, 0xbe, 0xe5, 0x9b, 0x68, 
        0xcf, 0x2e, 0x4e, 0x1c, 0xfb, 0x1f, 0x16, 0x3f, 0x1e, 0x54, 0xc8, 0xd7, 0xaa, 0x8d, 0x6b, 0xf5, 
        0x00, 0xab, 0x28, 0xc2, 0x2c, 0xa6, 0x4b, 0xa5, 0x2a, 0x3a, 0xe7, 0xa7, 0x8e, 0xe8, 0x58, 0xf2, 
        0x80, 0x87, 0xbc, 0x6a, 0x33, 0x82, 0x9a, 0x67, 0x4f, 0xb8, 0x43, 0xf8, 0x27, 0x9e, 0x41, 0xc5, 
        0x65, 0xf4, 0xd1, 0x1d, 0x63, 0x45, 0x8b, 0x9c, 0x90, 0xcd, 0x34, 0x51, 0x17, 0xc3, 0x24, 0x46, 
        0xcc, 0x07, 0xdc, 0x15, 0xd9, 0xa0, 0xd6, 0x71, 0xd2, 0x66, 0xce, 0x79, 0x42, 0x6d, 0x04, 0x0b, 
        0xc0, 0x4c, 0x96, 0x30, 0xfa, 0x83, 0x69, 0xb7, 0xbd, 0xf3, 0xb5, 0x8f, 0xb9, 0x2f, 0x02, 0x7a, 
        0x23, 0x64, 0x35, 0x0f, 0x6e, 0x55, 0x89, 0xe3, 0x5a, 0x62, 0x50, 0xdd, 0x2b, 0x57, 0x26, 0xff, 
        ],
        [
        0x04, 0xb4, 0x6f, 0xef, 0x9f, 0x21, 0x43, 0xbb, 0x35, 0x48, 0x26, 0xc9, 0x0d, 0x6c, 0xd6, 0xeb, 
        0x92, 0x94, 0x69, 0x29, 0x88, 0xee, 0x3d, 0x89, 0x8d, 0x23, 0xf6, 0x08, 0xe2, 0x3c, 0x05, 0x3b,
        0x7c, 0x83, 0x79, 0x5a, 0x0b, 0x96, 0x6d, 0x77, 0x00, 0x4f, 0xa9, 0xc5, 0xb9, 0x8f, 0xc3, 0x31, 
        0xff, 0xf3, 0x87, 0xa6, 0xac, 0x6e, 0x9a, 0x11, 0xbc, 0x76, 0xb0, 0x22, 0xbd, 0xc4, 0xae, 0x64, 
        0xdd, 0x28, 0xea, 0x7e, 0xb5, 0x49, 0xd9, 0x1a, 0x0f, 0xf8, 0x7d, 0xb6, 0x95, 0x4c, 0xfe, 0x38, 
        0x4d, 0xa2, 0x70, 0x12, 0xc1, 0x51, 0x75, 0x1e, 0x56, 0x4a, 0x8e, 0x1f, 0xe3, 0xcf, 0x2b, 0x5b, 
        0x67, 0x45, 0x42, 0xe1, 0x3e, 0x90, 0x33, 0x46, 0xaf, 0x41, 0x8b, 0x1b, 0x81, 0x40, 0xdb, 0x7a, 
        0xd5, 0x9d, 0xa4, 0xbe, 0x61, 0x09, 0xd3, 0xbf, 0x6a, 0xa7, 0x4b, 0xf1, 0x68, 0x03, 0x54, 0x17, 
        0x2d, 0x6b, 0xba, 0xe0, 0x8a, 0x3f, 0xa3, 0xcc, 0x80, 0xa1, 0xfa, 0x93, 0x2a, 0xd4, 0xe7, 0xb2, 
        0xfc, 0xa0, 0x1d, 0x27, 0x58, 0x59, 0xe8, 0x85, 0xf9, 0x47, 0x55, 0x65, 0x4e, 0x2e, 0x72, 0x32, 
        0x19, 0xaa, 0x37, 0x0c, 0xdc, 0xd0, 0x8c, 0x36, 0xc6, 0x62, 0xa5, 0x5f, 0x99, 0x2c, 0xe5, 0xf4, 
        0xb8, 0x5d, 0x24, 0x3a, 0x84, 0xb1, 0x5e, 0x20, 0x07, 0xd7, 0x91, 0xd1, 0x82, 0xed, 0xec, 0x66, 
        0x30, 0x5c, 0x25, 0xcd, 0x44, 0xab, 0xc0, 0x2f, 0x7b, 0xa8, 0x10, 0xc7, 0x13, 0xfd, 0xc8, 0x7f, 
        0xe6, 0xf0, 0x0a, 0x39, 0xd8, 0x60, 0xf7, 0x52, 0x78, 0x14, 0x86, 0x9c, 0xf5, 0xd2, 0xcb, 0x06, 
        0xfb, 0xda, 0x57, 0x50, 0xb7, 0xe9, 0x18, 0x15, 0x74, 0x34, 0x1c, 0xc2, 0xca, 0x71, 0x9e, 0x73, 
        0x01, 0xb3, 0x63, 0xdf, 0xe4, 0xf2, 0x16, 0x53, 0x98, 0x02, 0x97, 0xce, 0x9b, 0xad, 0x0e, 0xde, 
        ],
        [
        0xe9, 0x4d, 0x0c, 0xd8, 0x43, 0x17, 0x8e, 0x6f, 0xcb, 0x09, 0x85, 0xb7, 0xf9, 0xdc, 0x70, 0xc0, 
        0x42, 0x7f, 0x62, 0x8a, 0x01, 0xa0, 0xa7, 0xfd, 0xf3, 0xc7, 0x05, 0x90, 0xe4, 0x82, 0x84, 0x7b, 
        0x69, 0xe2, 0xd3, 0x31, 0xb4, 0x9e, 0x12, 0xee, 0x5c, 0xb9, 0x83, 0x20, 0x23, 0xb0, 0x55, 0x88, 
        0xdd, 0x8f, 0x66, 0x46, 0xf4, 0x1b, 0x36, 0x48, 0x2f, 0xf6, 0xf0, 0xda, 0xf5, 0x51, 0xd4, 0x77, 
        0x7e, 0xde, 0x3c, 0xd2, 0x39, 0x5d, 0x0b, 0x97, 0xae, 0x56, 0xa5, 0x76, 0x60, 0xed, 0x6e, 0xad, 
        0x0e, 0x4c, 0x4e, 0x64, 0x63, 0x58, 0x08, 0x57, 0xbe, 0x53, 0x89, 0x4a, 0x75, 0x5e, 0xa9, 0xb1, 
        0x47, 0x98, 0x93, 0xcf, 0xac, 0x67, 0xc6, 0xa2, 0x4b, 0xf1, 0xfa, 0x1a, 0x40, 0xb8, 0xc1, 0x3e,
        0x0f, 0xd5, 0xd6, 0x22, 0x92, 0x6c, 0x03, 0x24, 0xd9, 0xfc, 0xc4, 0xab, 0x28, 0x9c, 0xc9, 0xa1, 
        0x1e, 0xd0, 0x1f, 0x11, 0x33, 0x71, 0x61, 0x3a, 0xbb, 0x54, 0x87, 0xa4, 0xe0, 0xdb, 0xce, 0x7c, 
        0x1d, 0x2d, 0x04, 0xbd, 0x32, 0x18, 0x9f, 0x14, 0x45, 0xc5, 0x0a, 0x38, 0xcc, 0xc8, 0xa3, 0xe8, 
        0x8d, 0xe6, 0xec, 0x78, 0x8c, 0xbc, 0x86, 0xe3, 0x4f, 0x9d, 0xfe, 0x02, 0xbf, 0x16, 0xaa, 0x94, 
        0x96, 0x3d, 0x74, 0x3b, 0x52, 0xef, 0xb2, 0xa6, 0x19, 0x6b, 0x34, 0x5a, 0xb6, 0x07, 0xaf, 0xea, 
        0x06, 0x30, 0xca, 0x8b, 0x50, 0x65, 0xba, 0xc2, 0x7d, 0x68, 0xeb, 0x29, 0x41, 0x81, 0x7a, 0x80, 
        0x9b, 0x1c, 0x59, 0x79, 0xd1, 0x27, 0x49, 0xf8, 0x2e, 0xe5, 0x25, 0xd7, 0x21, 0xf7, 0x99, 0x3f, 
        0x26, 0x91, 0xe1, 0x2b, 0xc3, 0x44, 0x5f, 0x15, 0x9a, 0x10, 0x6a, 0xa8, 0xff, 0x00, 0x2c, 0xe7, 
        0x0d, 0x35, 0x5b, 0xb3, 0x73, 0xcd, 0x37, 0xfb, 0xb5, 0x95, 0xdf, 0x72, 0xf2, 0x6d, 0x13, 0x2a, 
        ],
    ];

}


1

